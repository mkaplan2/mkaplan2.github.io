:root{ 
    /* selects the root element of hte document, which in this case is <html> 
    Any variables declared in the root block have global scope
    Property names that are prefixed with --, like --example-name, 
    represent custom properties that contain a value that 
    can be used in other declarations using the var() function.*/
    --clr-primary: rgb(54,112,199);
    --clr-light:#f4f4f4;
    --clr-dark:#333;
    --clr-warming:rgb(99,36,36);
}

/* "*" -selects all the elements */
*,
*::before,
*::after{
    font-family:inherit;
    box-sizing: border-box;
}

body{
    margin:0;
    font-family:"Work Sans", sans-serif;
    font-weight:300;
    font-size:1.5rem;
    background-color:var(--clr-primary); 
    /* --clr-primary represents the color 
    that was assigned to it in the root block above*/

    color:var(--clr-light);

    display: grid;
    
    /* Repeating the name of a grid area causes the content to span those cells. 
    A period signifies an empty cell. 
    The syntax itself provides a visualization of the structure of the grid. */
    grid:
        "header header header header" auto
        "...... lists active ......." auto /
        1fr minmax(100px, 300px) minmax(250px, 500px) 1fr;
}

.title{
    grid-area: header; /* actually put the title in the "header" place on the grid */
    text-align: center;
    font-size: calc(7vw + 2rem);
    font-weight: 900;
    color: rgba(0,0,0,0.1);
    letter-spacing: 2px;
    margin: -0.3em 0 0.5em;
}

.all-tasks{
    grid-area: lists; /* putting the things in the "all-task" class/div into the grid-area we called "lists" */
}

.task-list{
    font-size: 1.2rem;
    line-height: 1.7;
    list-style: circle; /* makes the bullet point of the list into a circle shape */
    padding-left: 1.1em;
}

.list-name{ /* i think this is made in the js sheet */
    cursor: pointer;
}

.list-name:hover{ /* says wut to do if u hover the mouse over this element */
    opacity: 0.7;
}

form{ /* access the form tag */
    display: flex;

}

.btn {
    cursor: pointer; /* says that the mouse cursor will be a pointer if go over the button element */
    background: 0; /* MIGHT NEED TO WATCH VIDEO TO SEE WUT PUTTING ALL THESE THINGS TO ZERO IS DOING! */
    border: 0;
    padding: 0;
    color: inherit;
    font-size: 1rem;
}

.btn.create{ /* access the class "btn create" --so basically a "." corresponds to a space LOLL */
    font-size: 1.5rem;
    font-weight: 900;
    margin-right: 0.25em;
    transition: opacity 250ms ease-in; /* the transtion occurs when the opactiy changes */
}

.btn.create:hover{
    opacity:0.7; /* when hover, the opacity will change --> this will then cause the transtion above to occur */
}

.btn.delete{
    /*font-weight: 700;
    letter-spacing: 1px; */
    opacity: 0.7;
    font-size: 1rem;
    transition: color 200ms;
}

.btn.delete:hover{
    color: var(--clr-warning);
}

.new{ /* watch video to see exactly wut this is doing! */
    background: transparent;
    border: 0;
    color: inherit; /*should inherit the white color*/
    border-bottom: 1px solid currentColor;
    font-size: inherit; /* should inherit the font size from above */
    outline: none; 
    padding: 0.25em;

    transition: border-bottom 150ms ease-in;
    order: 2;
}

.new::placeholder{
    /* we are styling the placeholders in the boxes you type in (the text that is there before you start typing */
    opacity: 0.3;
}

.new:focus{ 
    border-bottom-width: 3px;
}

.new:focus::placeholder{ 
    opacity: 0.15; 
}


.new.list{
    font-size: 1.1rem;
}

.new.task{
    margin-bottom: 0;
}

.active-list{
    font-weight: 700;
}

.todo-list{
    --spacer: 2rem; /* !!!making a variable i think??? look at video! */

    grid-area: active;
    background: var(--clr-light);
    color: var(--clr-dark);
}

.todo-header{
    padding: var(--spacer); /* !!!using a variable i think??? look at video! */
    background:#e4e4e4;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.list-title{
    margin: 0 1em 0 0;
}

.task-count{
    margin: 0;
    font-size: 1rem;
}

.todo-body{
    padding: var(--spacer);
    position: relative;
}

.new-task-creator .create{
    color: var(--clr-primary);
}

[type="checkbox"]{ /* hides all checkboxes/anything tht has a type of "checkbox' */
    opacity: 0;
    position: absolute;
}

.task label{
    display: inline-flex;
    align-items: center;
    position: relative;
    margin-bottom: 1.25em;
}

.task{
    position: relative;
    margin-bottom: 1.25em;
}

.task::after{
    content: ""; /* wut is happening? does this insert nothing after the task class? */
    position: absolute;
    right: 0;
    left: 0;
    bottom: -0.5em;
    height: 1px;
    background: currentColor;
    opacity: 0.1;
}

.custom-checkbox{
    --size: .75em;
    display: inline-block;
    width: var(--size);
    height: var(--size);
    margin-right: var(--size);
    cursor: pointer;
    border: 2px solid currentColor;
    border-radius: 50%;
    transform: scale(1);
    transition: transform 200ms ease-in-out;
}

.task:hover .custom-checkbox,
[type="checkbox"]:focus + label .custom-checkbox{ /* !!!WATCH VID TO SEE WUT IS HAPPENING WITH THE "+" SIGN!! */
    transform: scale(1.2);
    color: var(--clr-primary);
}

[type="checkbox"]:checked + label .custom-checkbox{
    background: var(--clr-primary);
    border-color: var(--clr-primary);
    box-shadow: inset 0 0 0px 2px white;
}

[type="checkbox"]:checked + label{
    opacity: 0.5;
}

.task label::after{
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    left: 1.5em;
    top: calc(50% - 1.5px);
    height: 3px;
    background: currentColor;
    transform: scaleX(0);
    transform-origin: right;
    transition: transform 150ms ease-in-out;
}

[type="checkbox"]:checked + label::after{
    transform: scaleX(1);
    transform-origin: left;
}

.delete-stuff{
    display: flex;
    justify-content: space-evenly;
    position: absolute;
    width: 100%;
    left: 0;
    bottom: -35px;
    color: var(--clr-light);
}


